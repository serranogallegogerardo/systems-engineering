Accion p1 ES

	Ambiente

		flotas = reg
			cod_flota:
			vigente:
			cod_estado:
			km:
		fr

		mflotas = reg
			cod_flota:
			cod_estado
			km:

		fr

		arSAL,arMAE: archivo de flotas ordenado por cod_flota
		ra:flotas
		rs:flotas

		estados:arreglo [1..4] de entero
		t:real
		i:entero

		arMOV: archivo de mflotas ordenado por cod_flota
		ro:mflotas

		Procedimiento LeerMAE ES
			Leer(arMAE,ra)
			Si FDA(arMAE) Entonces
				ra.cod_flota:=HV
			Fin si
		fp
		Procedimiento LeerMOV ES
			Leer(arMOV,ro)
			Si FDA(arMOV) Entonces
				ro.cod_flota:=HV
			Fin si
		fp

	Proceso

		AbrirE/(arMAE)
		AbrirE/(arSAL)
		AbrirE/(arMOV)
		Leer(arMAE,ra)
		Leer(arMOV,ro)

		Para i:=1 hasta 4 hacer
			estados[i]:=0
		fp

			Mientras ra.cod_flota <> HV y ro.cod_flota <> HV Hacer

				Si ra.codflota < ro.cod_flota Entonces
					Esc(arSAL,ra)
					LeerMAE
				Sino

					Si ra.cod_flota = ro.cod_flota Entonces
						estados[ro.codestado]:=estados[ro.codestado]+1
						Segun ro.cod_estado Hacer
							1:
							Esc('Error no se puede agregar un avion que ya existe.')
							2: // act km acumulando
							rs:=ra // regsalida := regmae
							rs.km:=rs.km+ro.km
							3:
							esc('avion en arreglo o mantenimiento', ro.cod_flota)
							4:
							rs:=ra
							Si ro.km <> rs.km Entonces
								rs.km:=rs.km+ro.km
							Fin si
							rs.vigente:='no'
						Fs
						Esc(arSAL,rs)
						LeerMAE
						LeerMOV
					Sino // nuevo mov
						estados[ro.codestado]:=estados[ro.codestado]+1
						Segun ro.cod_estado Hacer
							1:
							rs.km:=0
							rs.vigente:='si'
							rs.cod_estado:=ro.cod_estado
							rs.cod_flota:=ro.cod_flota

							2:Esc('No se puede actualizar la cantidad de km de un avion inexistente')
							3:Esc('No se puede poner en matenimiento o arreglo un avion inexistente')
							4:Esc('No se puede actualizar la vigencia de un avion inexistente')
						Fin segun
						LeerMOV
					fin si
						
				Fin Si

			Fin mientras
			Esc('Total por estado de aviones:')
			Esc('Estado:')
			t:=0
			Para i:=1 hasta 4 hacer
				Esc(i,':',estado[i])
				t:= t+estado[i]
			fp
			Esc('Porcentaje de aviones x estado respecto del total ')
			Esc('Estado:')
			Para i:=1 hasta 4 hacer
				Esc(i,':', ((estado[i]*100)/t),'%')
			fp

		Cerrar(arMAE)
		Cerrar(arMOV)

Fa // 43m tarde.. en total el parcial me llevaria 1h y media aprox

// ejercicio estadistico

Accion p2() ES

	Ambiente

			flotas = reg
				cod_flota
				vigente
				cod_estado
				km
			fr
		
		aviones = reg
			cod_flota:N(4)
			cod_modelo:1..5
			descripcion:AN(10)
			Fecha_compra:N(8)
		fr
		rf:flotas
		arFLO:archivo de flotas ordenado por cod_flota	
		arAVI:archivo de aviones indexado por cod_flota
		r:aviones
		a:arreglo [1..3,1..6] de real
		i,j:entero

		Procedimiento knowvigente ES
			// 2021 > 2005
			Si fechahoy >r.Fecha_Compra Entonces
				i:=1
			Sino 
				i:=2
			Fin si
		fp

		Procedimiento knowi() ES
			Si rf.vigente = 'si' Entonces
				i:=1
			Sino
				i:=2
			Fin si
		fp

	Proceso

		Para i:=1 hasta 3 hacer
			Para j:=1 hasta 6 hacer
				a[i,j]:=0
			fp
		fp

		AbrirE/(arAVI)
		AbrirE/(arFLO)
		Leer(arFLO,rf)

		Mientras NFDA(arFLO) Hacer

			Si rf.km > 25000 Entonces
			knowi()
			j:=r.modelo
			// 1km 1:4
			a[i,j]:=a[i,j]+1
			a[3,j]:=a[3,j]+1
			a[i,6]:=a[i,6]+1
			a[3,6]:=a[3,6]+1
			Fin si

			Leer(arFLO,rf)

		Fm

		// mostrar datos
		Esc('Vigente / Modelo              				/ Totales')
		Esc('') // salto de linea
		Esc('		 / Mod1 / Mod2 / Mod3 / Mod4 / Mod5 /
		Para i:=1 hasta 3 hacer 
			Segun i hacer
				1:Esc('Si') // linea 3, se imprime
				2:Esc('No')
				3:Esc('Totales:')
 			fs
			Para j:=1 hasta 6 hacer
				Esc('/ ',a[i,j],' /',) // esto se imprime en la misma linea 3
			fp
			Esc('')
		fp

		Cerrar(arAVI)
		Cerrar(arFLO)
Fin accion

//42m tarde en hacer